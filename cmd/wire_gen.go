// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/sterligov/banner-rotator/internal/bandit/ucb"
	"github.com/sterligov/banner-rotator/internal/config"
	"github.com/sterligov/banner-rotator/internal/gateway/nats"
	"github.com/sterligov/banner-rotator/internal/gateway/sql"
	"github.com/sterligov/banner-rotator/internal/server"
	"github.com/sterligov/banner-rotator/internal/server/grpc"
	"github.com/sterligov/banner-rotator/internal/server/grpc/service"
	"github.com/sterligov/banner-rotator/internal/server/http"
	"github.com/sterligov/banner-rotator/internal/usecase/banner"
	"github.com/sterligov/banner-rotator/internal/usecase/group"
	"github.com/sterligov/banner-rotator/internal/usecase/slot"
)

// Injectors from wire.go:

func setup(configConfig *config.Config) (*server.Server, func(), error) {
	db, err := sql.NewDatabase(configConfig)
	if err != nil {
		return nil, nil, err
	}
	bannerGateway := sql.NewBannerGateway(db)
	natsNats, err := nats.NewNatsConnection(configConfig)
	if err != nil {
		return nil, nil, err
	}
	eventGateway := nats.NewEventGateway(configConfig, natsNats)
	statisticGateway := sql.NewStatisticGateway(db)
	ucbUCB := ucb.New()
	useCase := banner.NewUseCase(bannerGateway, eventGateway, statisticGateway, ucbUCB)
	bannerService := service.NewBannerService(useCase)
	slotGateway := sql.NewSlotGateway(db)
	slotUseCase := slot.NewUseCase(slotGateway)
	slotService := service.NewSlotService(slotUseCase)
	groupGateway := sql.NewGroupGateway(db)
	groupUseCase := group.NewUseCase(groupGateway)
	groupService := service.NewGroupService(groupUseCase)
	healthService := service.NewHealthService(db)
	grpcServer := grpc.NewServer(configConfig, bannerService, slotService, groupService, healthService)
	handler, err := internalhttp.NewHandler(configConfig)
	if err != nil {
		return nil, nil, err
	}
	internalhttpServer, err := internalhttp.NewServer(configConfig, handler)
	if err != nil {
		return nil, nil, err
	}
	serverServer := server.NewServer(grpcServer, internalhttpServer)
	return serverServer, func() {
	}, nil
}
